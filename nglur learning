ProductController.cs
------------------------------


        [HttpPost]
        public ActionResult AddProductFeature(Guid ProductID, int FeatureID, string featureText)
        {
            if (FeatureID == -1)
            {
                _dbContext = new karrykartEntities();
                var feature = new ProductFeature() { ProductID = ProductID, Feature = featureText };
                _dbContext.ProductFeatures.Add(feature);
                _dbContext.SaveChanges();
                _logger.WriteLog(CommonHelper.MessageType.Success, "Product feature added successfully with text=" + featureText, "AddProductFeature", "ProductController", User.Identity.Name);

                return Json(new { messagetype = ApplicationMessages.Product.SUCCESS, message = "New product feature details added successfully." , id=feature.FeatureID});
            }
            return View();
        }
        
  ProductCtrl.js
  -------------------------
  
     var product;
    $scope.basicDetailsEditing = false;
    // var product = ProductService.getProduct($location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1)));//$http.get(apiURL + "product?id=" + $location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1))); //ProductService.GetProduct(id);
    // console.log(product["ProductID"]);
    apiURL += "product?id=" + $location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1));//$http.get(apiURL + "product?id=" + $location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1));
    $http({
        method: "GET",
        url: apiURL
    }).success(function (data, status, header, config) {
        $scope.product = data;
    });

    $scope.selected = {};
    $scope.categories;
    $scope.subcategories;
    $scope.brands;
    $scope.isAddFeature = false;

    $http.get("/Product/GetCategories").success(function (data) {
        $scope.categories = data;
    }).error(function (status) {
        //  alert(status);
    });

    $http.get("/Product/GetBrands").success(function (data) {
        $scope.brands = data;
    }).error(function (status) {
        //  alert(status);
    });

    $http.get("/Product/GetSubCategories").success(function (data) {
        $scope.subcategories = data;
    }).error(function (status) {
        //  alert(status);
    });

    $http({
        method: "GET",
        url: apiURL
    }).success(function (data, status, header, config) {
        $scope.product = data;

    });


    $scope.editBasicDetails = function () {
        $scope.basicDetailsEditing = true;
    }
    $scope.cancelBasicDetails = function () {
        $scope.basicDetailsEditing = false;
    }
    $scope.updateBasicDetails = function () {
        var basicproductDetails = {
            "ProductID": $scope.product.ProductID,
            "Name": $scope.product.Name,
            "Description": $scope.product.Description,
            "CategoryID": $scope.product.CategoryID,
            "SubCategoryID": $scope.product.SubCategoryID,
            "BrandID": $scope.product.BrandID,
            "Active": $scope.product.Active
        };

        $http.post("/Product/EditBasicProductDetails", { model: basicproductDetails }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                $scope.basicDetailsEditing = false;
            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });
    };


    $scope.deleteProductFeature = function (id) {
        $http.post("/Product/RemoveProductFeature", { ProductID: $scope.product.ProductID, FeatureID: id }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
            

            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });
    };

    $scope.getTemplate = function (feature) {
        if (feature.FeatureID === $scope.selected.FeatureID) return 'edit';
        else if (feature.FeatureID == '-1') return 'add';
        else return 'display';
    };

    
    $scope.editFeature = function (feature) {
        $scope.selected = angular.copy(feature);
    };

    $scope.addFeature = function ()
    {
        $scope.product.Features.push({
            "FeatureID": "-1",
            "Feature": ""
        });

        $scope.isAddFeature = true;
    }

    $scope.reset = function () {
        $scope.selected = {};
    };

    $scope.saveEditedFeature = function (model) {
        $http.post("/Product/EditProductFeature", { ProductID: $scope.product.ProductID, FeatureID: model.FeatureID, featureText: model.Feature }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                $scope.reset();
            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });

    };

    $scope.saveAddedFeature = function (model)
    {
        $http.post("/Product/AddProductFeature", { ProductID: $scope.product.ProductID, FeatureID: model.FeatureID, featureText: model.Feature }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                $scope.product.Features.splice(($scope.product.Features.length-1), 1, { "FeatureID": responseData.id, "Feature": model.Feature });
                $scope.isAddFeature = false;
                
            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });
    }
}]);

//app.service('ProductService', ['$http', function ($http, $scope) {
//    var apiURL = 'http://localhost:13518/api';

//    var product = {};

//    this.getProduct = function (id, $scope) {
//        apiURL += "product?id=" + id;
//        return $http({
//            method: "GET",
//            url: apiURL,
//            headers: { 'Content-Type': 'application/json' }
//        }).then(function successCallback(response) {
//            // this callback will be called asynchronously
//            // when the response is available
//            return response.data;
//            // return product;
//            //  console.log(product);
//        }, function errorCallback(response) {
//            //console.log(response);
//            // called asynchronously if an error occurs
//            // or server returns response with an error status.
//        });
//        //  console.log(product);

//    };
//}]);


Edit.cshtml
-----------------------

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
<link href="~/Content/kendo/2017.1.118/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2017.1.118/kendo.default.min.css" rel="stylesheet" />
<script src="http://kendo.cdn.telerik.com/2017.1.118/js/kendo.all.min.js"></script>
<script type="text/javascript">

    //$(document).ready(function () {
    //    // create Editor from textarea HTML element with default set of tools
    //    $("#productDescription").kendoEditor({
    //        resizable: {
    //            content: true,
    //            toolbar: true
    //        }
    //    });
    //});
</script>
<script src="~/Scripts/App/ProductCtrl.js"></script>

<div class="row">

    <div class="col-md-12">
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Home")">Home</a></li>
            <li><a href="@Url.Action("Index","Product")">Product</a></li>
            <li class="active">Edit</li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-md-10" ng-controller="ProductController">
        <h3>Product Details</h3>
        <hr />

        <form name="formBasicdetails" class="form-horizontal">
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Name">Name</label>
                <div class="col-lg-7">
                    <input type="text" ng-disabled="!basicDetailsEditing" ng-model="product.Name" placeholder="e.g Arhar dal, chocolate etc." name="productName" class="form-control" />

                </div>
            </div>


            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Description">Description</label>
                <div class="col-lg-7">
                    <textarea ng-disabled="!basicDetailsEditing" ng-model="product.Description" placeholder="e.g Enter product details." name="productDescription" id="productDescription" class="form-control"></textarea>

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.CategoryID">Category</label>
                <div class="col-lg-7">
                    <select ng-disabled="!basicDetailsEditing" ng-options="c.CategoryID as c.Name for c in categories" ng-init="product.CategoryID" ng-model="product.CategoryID" class="form-control" name="productCategory" id="productCategory"></select>
                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.SubCategoryID">Sub-Category</label>
                <div class="col-lg-7">

                    <select ng-disabled="!basicDetailsEditing" ng-options="sc.SCategoryID as sc.Name for sc in subcategories" ng-model="product.SubCategoryID" class="form-control" name="productSubCategory" id="productSubCategory"></select>

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.BrandID">Brand</label>
                <div class="col-lg-7">
                    <select ng-disabled="!basicDetailsEditing" ng-options="b.BrandID as b.Name for b in brands" ng-model="product.BrandID" class="form-control" name="productBrand" id="productBrand"></select>

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Active">Active</label>
                <div class="col-lg-7">
                    <input type="checkbox" ng-disabled="!basicDetailsEditing" ng-model="product.Active" name="productActive" id="productActive" />

                </div>
            </div>

            <div class="form-group">
                <div class="col-lg-7 col-lg-offset-3">
                    <button ng-click="editBasicDetails()" ng-hide="basicDetailsEditing" class="btn btn-info">Edit Basic Details <i class="fa fa-edit"></i></button>
                    <button ng-click="updateBasicDetails()" ng-show="basicDetailsEditing" class="btn btn-success">Update <i class="fa fa-check-circle"></i></button>
                    <button ng-click="cancelBasicDetails()" ng-show="basicDetailsEditing" class="btn btn-danger">Cancel <i class="fa fa-close"></i></button>

                    @*<a href="@Url.Action("Index","Category")" class="btn btn-danger">Back <i class="fa fa-backward"></i> </a>*@
                </div>
            </div>
        </form>

        <hr />
        <h3>Product Features and Images</h3>
        <hr />

        <form name="formproductFeatureImages" class="form-horizontal">
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Features">Features</label>
                <div class="col-lg-9">

                    <table class="table table-striped table-hover">
                        <tr><th>#</th> <th>Feature Description</th><td>Actions</td></tr>
                        <tr ng-repeat="x in product.Features" ng-include="getTemplate(x)">
                            @* <td>{{ x.FeatureID }}</td>
                                <td>
                                        {{ x.Feature }}
                                 </td>
                                <td>
                                <button class="btn btn-info btn-xs" id="btnEditFeature" title="Edit Feature" ng-click="editProductFeature('{{ x.FeatureID }}')"> <i class="fa fa-pencil"></i> </button> <button class="btn btn-danger btn-xs" title="Remove Feature" id="btnDelete" ng-click="deleteProductFeature( x.FeatureID )"> <i class="fa fa-remove"></i> </button></td>*@
                        </tr>
                    </table>
                    <script type="text/ng-template" id="display">
                        <td>{{ x.FeatureID }}</td>
                        <td>
                            {{ x.Feature }}
                        </td>
                        <td>
                            <button class="btn btn-info btn-xs" id="btnEditFeature" title="Edit Feature" ng-click="editFeature(x)"> <i class="fa fa-pencil"></i> </button> <button class="btn btn-danger btn-xs" title="Remove Feature" id="btnDelete" ng-click="deleteProductFeature( x.FeatureID )"> <i class="fa fa-remove"></i> </button>
                        </td>
                    </script>
                    <script type="text/ng-template" id="edit">
                        <td><span ng-model="selected.FeatureID">{{ x.FeatureID }}</span></td>
                        <td><input type="text" ng-model="selected.Feature" /></td>
                        <td>
                            <button class="btn btn-success btn-xs" ng-click="saveEditedFeature(selected)">Save</button>
                            <button class="btn btn-danger btn-xs" ng-click="reset()">Cancel</button>
                        </td>
                    </script>
                    <script type="text/ng-template" id="add">
                        <td><span ng-model="x.FeatureID" >{{x.FeatureID}} </span></td>
                        <td><input type="text" ng-model="x.Feature" /></td>
                        <td>
                            <button class="btn btn-success btn-xs" ng-click="saveAddedFeature(x )">Save</button>
                            <button class="btn btn-danger btn-xs" ng-click="reset()">Cancel</button>
                        </td>
                        </script>
                    <button class="btn btn-info" ng-disabled="isAddFeature" ng-click="addFeature()">Add new feature <i class="fa fa-plus"></i> </button>
                    @*<input type="text" ng-disabled="!basicDetailsEditing" ng-model="product.Name" placeholder="e.g Arhar dal, chocolate etc." name="productName" class="form-control" />*@

                </div>
            </div>




            <div class="form-group">
                <div class="col-lg-7 col-lg-offset-3">
                    <button ng-click="editBasicDetails()" ng-hide="basicDetailsEditing" class="btn btn-info">Edit Basic Details <i class="fa fa-edit"></i></button>
                    <button ng-click="updateBasicDetails()" ng-show="basicDetailsEditing" class="btn btn-success">Update <i class="fa fa-check-circle"></i></button>
                    <button ng-click="cancelBasicDetails()" ng-show="basicDetailsEditing" class="btn btn-danger">Cancel <i class="fa fa-close"></i></button>

                    @*<a href="@Url.Action("Index","Category")" class="btn btn-danger">Back <i class="fa fa-backward"></i> </a>*@
                </div>
            </div>
        </form>
    </div>
</div>
