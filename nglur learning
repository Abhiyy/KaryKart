ProductCtrl.js
---------------------

app.controller("ProductController", ['$scope', '$http', '$window', '$location', function ($scope, $http, $window, $location) {
    var apiURL = 'http://localhost:53445/api/';

    var product;
    $scope.basicDetailsEditing = false;

    apiURL += "product?id=" + $location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1));//$http.get(apiURL + "product?id=" + $location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1));

    $scope.selected = {};
    $scope.selectedPrice = {};
    $scope.categories;
    $scope.subcategories;
    $scope.brands;
    $scope.isAddFeature = false;
    $scope.isAddImage = false;
    $scope.sizetypes;
    $scope.units;

    $http.get("/Product/GetCategories").success(function (data) {
        $scope.categories = data;
    }).error(function (status) {
        //  alert(status);
    });

    $http.get("/Product/GetBrands").success(function (data) {
        $scope.brands = data;
    }).error(function (status) {
        //  alert(status);
    });

    $http.get("/Product/GetSubCategories").success(function (data) {
        $scope.subcategories = data;
    }).error(function (status) {
        //  alert(status);
    });

    $http.get("/Product/GetSizeTypes").success(function (data) {
        $scope.sizetypes = data;
    }).error(function (status) {
        //  alert(status);
    });

    $http.get("/Product/GetUnits").success(function (data) {
        $scope.units = data;
    }).error(function (status) {
        //  alert(status);
    });


    LoadProduct();

    function LoadProduct() {
        $http({
            method: "GET",
            url: apiURL
        }).success(function (data, status, header, config) {
            $scope.product = data;
            $scope.productPriceStockMappings = [];
            var json = JSON.parse(JSON.stringify(data));
            for (var i = 0; i < data.ProductSizeMappings.length; i++) {
                $scope.productPriceStockMappings.push({
                    "ProductSizeMappingID":$scope.product.ProductSizeMappings[i].ProductSizeMappingID,
                    "SizeID": $scope.product.ProductSizeMappings[i].SizeID,
                    "SizeName":$scope.product.ProductSizeMappings[i].SizeName,
                    "UnitID": $scope.product.ProductSizeMappings[i].UnitID,
                    "UnitName": $scope.product.ProductSizeMappings[i].UnitName,
                    "SizeTypeID": $scope.product.ProductSizeMappings[i].SizeTypeID,
                    "SizeTypeName": $scope.product.ProductSizeMappings[i].SizeTypeName,
                    "Stock": $scope.product.ProductSizeMappings[i].Stock,
                    "ShippingCostID": $scope.product.ShippingDetails[i].ShippingCostID,
                    "Cost": $scope.product.ShippingDetails[i].Cost,
                    "PriceID": $scope.product.Prices[i].PriceID,
                    "Price": $scope.product.Prices[i].Price,
                    "CurrencyID": $scope.product.Prices[i].CurrencyID,
                });
            }
        });
      
        
    }

    $scope.editBasicDetails = function () {
        $scope.basicDetailsEditing = true;
    }
    $scope.cancelBasicDetails = function () {
        $scope.basicDetailsEditing = false;
    }
    $scope.updateBasicDetails = function () {
        var basicproductDetails = {
            "ProductID": $scope.product.ProductID,
            "Name": $scope.product.Name,
            "Description": $scope.product.Description,
            "CategoryID": $scope.product.CategoryID,
            "SubCategoryID": $scope.product.SubCategoryID,
            "BrandID": $scope.product.BrandID,
            "Active": $scope.product.Active
        };

        $http.post("/Product/EditBasicProductDetails", { model: basicproductDetails }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                $scope.basicDetailsEditing = false;
            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });
    };


    $scope.deleteProductFeature = function (id) {
        $http.post("/Product/RemoveProductFeature", { ProductID: $scope.product.ProductID, FeatureID: id }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                LoadProduct();

            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });
    };

    $scope.getTemplate = function (feature) {
        if (feature.FeatureID === $scope.selected.FeatureID) return 'edit';
        else if (feature.FeatureID == '-1') return 'add';
        else return 'display';
    };

    $scope.getTemplateImages = function (image) {
        if (image.ImageID == '-1') return 'addPicture';
        else return 'displayPicture';
    };

    $scope.getTemplateForProductStockPrice = function (ps) {
        if (ps != null) {
            if (ps.SizeID === $scope.selectedPrice.SizeID) return 'editPricing';
            else if (ps.SizeID == '-1') return 'addPricing';
            else return 'displayPricing';
        }
    };

    $scope.editFeature = function (feature) {
        $scope.selected = angular.copy(feature);
    };

    $scope.editProductStockPrice = function (ps) {
        $scope.selectedPrice = angular.copy(ps);
    };

    $scope.addFeature = function () {
        $scope.product.Features.push({
            "FeatureID": "-1",
            "Feature": ""
        });

        $scope.isAddFeature = true;
    }

    $scope.addImage = function () {
        $scope.product.Images.push({
            "ImageID": "-1",
            "ImageLink": ""
        });

        $scope.isAddImage = true;
    }

    $scope.reset = function (i) {
        if (i == '1') $scope.selected = {};
        if (i == '2') $scope.selectedPrice = {};
    };

    

    $scope.saveEditedFeature = function (model) {
        $http.post("/Product/EditProductFeature", { ProductID: $scope.product.ProductID, FeatureID: model.FeatureID, featureText: model.Feature }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                $scope.reset();
            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });

    };

    $scope.saveNewImage = function (model) {

        var formData = new FormData();
        formData.append("file", $scope.files[0]);
        formData.append("ProductID", $scope.product.ProductID);

       
        $http.post("/Product/AddNewProductImage", formData, {
            transformRequest: angular.identity,
            headers: { 'Content-Type': undefined }
        }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                LoadProduct();//  $scope.product.Images.splice(($scope.product.Images.length - 1), 1, { "ImageID": responseData.id, "ImageLink": responseData.ImageLink });
                $scope.isAddImage = false;

            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        })
    };

    $scope.removeImage = function () {
        $scope.product.Images.splice(($scope.product.Images.length - 1), 1);
        $scope.isAddImage = false;
    };
    $scope.uploadedFile = function (element) {
        $scope.$apply(function ($scope) {
            $scope.files = element.files;
        });
    };

    $scope.removeNewFeature = function () {
        $scope.product.Features.splice(($scope.product.Features.length - 1), 1);
        $scope.isAddFeature = false;
    }

    $scope.deleteImage = function (id) {
        $http.post("/Product/RemoveProductImage", { ProductID: $scope.product.ProductID, ImageID: id }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                LoadProduct();

            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });
    }

    $scope.saveAddedFeature = function (model) {
        $http.post("/Product/AddProductFeature", { ProductID: $scope.product.ProductID, FeatureID: model.FeatureID, featureText: model.Feature }).success(function (responseData) {
            if (responseData.messagetype = "success") {
                alert(responseData.message);
                LoadProduct();
                $scope.isAddFeature = false;

            } else {
                alert(responseData.message);
            }
        }).error(function (responseData) {
            console.log("Error !" + responseData);
        });
    };
}]);



Edit.cshtml
-----------------------

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
<link href="~/Content/kendo/2017.1.118/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2017.1.118/kendo.default.min.css" rel="stylesheet" />
<script src="http://kendo.cdn.telerik.com/2017.1.118/js/kendo.all.min.js"></script>
<script type="text/javascript">

    //$(document).ready(function () {
    //    // create Editor from textarea HTML element with default set of tools
    //    $("#productDescription").kendoEditor({
    //        resizable: {
    //            content: true,
    //            toolbar: true
    //        }
    //    });
    //});
</script>
<script src="~/Scripts/App/ProductCtrl.js"></script>

<div class="row">

    <div class="col-md-12">
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Home")">Home</a></li>
            <li><a href="@Url.Action("Index","Product")">Product</a></li>
            <li class="active">Edit</li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-md-10" ng-controller="ProductController">
        <h3>Product Details</h3>
        <hr />

        <form name="formBasicdetails" class="form-horizontal">
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Name">Name</label>
                <div class="col-lg-7">
                    <input type="text" ng-disabled="!basicDetailsEditing" ng-model="product.Name" placeholder="e.g Arhar dal, chocolate etc." name="productName" class="form-control" />

                </div>
            </div>


            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Description">Description</label>
                <div class="col-lg-7">
                    <textarea ng-disabled="!basicDetailsEditing" ng-model="product.Description" placeholder="e.g Enter product details." name="productDescription" id="productDescription" class="form-control"></textarea>

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.CategoryID">Category</label>
                <div class="col-lg-7">
                    <select ng-disabled="!basicDetailsEditing" ng-options="c.CategoryID as c.Name for c in categories" ng-init="product.CategoryID" ng-model="product.CategoryID" class="form-control" name="productCategory" id="productCategory"></select>
                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.SubCategoryID">Sub-Category</label>
                <div class="col-lg-7">

                    <select ng-disabled="!basicDetailsEditing" ng-options="sc.SCategoryID as sc.Name for sc in subcategories" ng-model="product.SubCategoryID" class="form-control" name="productSubCategory" id="productSubCategory"></select>

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.BrandID">Brand</label>
                <div class="col-lg-7">
                    <select ng-disabled="!basicDetailsEditing" ng-options="b.BrandID as b.Name for b in brands" ng-model="product.BrandID" class="form-control" name="productBrand" id="productBrand"></select>

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Active">Active</label>
                <div class="col-lg-7">
                    <input type="checkbox" ng-disabled="!basicDetailsEditing" ng-model="product.Active" name="productActive" id="productActive" />

                </div>
            </div>

            <div class="form-group">
                <div class="col-lg-7 col-lg-offset-3">
                    <button ng-click="editBasicDetails()" ng-hide="basicDetailsEditing" class="btn btn-info">Edit Basic Details <i class="fa fa-edit"></i></button>
                    <button ng-click="updateBasicDetails()" ng-show="basicDetailsEditing" class="btn btn-success">Update <i class="fa fa-check-circle"></i></button>
                    <button ng-click="cancelBasicDetails()" ng-show="basicDetailsEditing" class="btn btn-danger">Cancel <i class="fa fa-close"></i></button>


                </div>
            </div>
        </form>

        <hr />
        <h3>Product Features and Images</h3>
        <hr />

        <form name="formproductFeatureImages" class="form-horizontal">
            <div class="form-group">

                
                <div class="col-lg-12">
                    <h4 for="product.Features">Features</h4><br />
                    <table class="table table-striped table-hover">
                        <tr><th>#</th> <th>Feature Description</th><td>Actions</td></tr>
                        <tr ng-repeat="x in product.Features" ng-include="getTemplate(x)"></tr>
                    </table>
                    <script type="text/ng-template" id="display">
                        <td>{{ x.FeatureID }}</td>
                        <td>
                            {{ x.Feature }}
                        </td>
                        <td>
                            <button class="btn btn-info btn-xs" id="btnEditFeature" title="Edit Feature" ng-click="editFeature(x)"> <i class="fa fa-pencil"></i> </button> <button class="btn btn-danger btn-xs" title="Remove Feature" id="btnDelete" ng-click="deleteProductFeature( x.FeatureID )"> <i class="fa fa-remove"></i> </button>
                        </td>
                    </script>
                    <script type="text/ng-template" id="edit">
                        <td><span ng-model="selected.FeatureID">{{ x.FeatureID }}</span></td>
                        <td><input type="text" ng-model="selected.Feature" /></td>
                        <td>
                            <button class="btn btn-success btn-xs" ng-click="saveEditedFeature(selected)">Save</button>
                            <button class="btn btn-danger btn-xs" ng-click="reset('1')">Cancel</button>
                        </td>
                    </script>
                    <script type="text/ng-template" id="add">
                        <td><span ng-model="x.FeatureID">{{x.FeatureID}} </span></td>
                        <td><input type="text" ng-model="x.Feature" /></td>
                        <td>
                            <button class="btn btn-success btn-xs" ng-click="saveAddedFeature(x )">Save</button>
                            <button class="btn btn-danger btn-xs" ng-click="removeNewFeature()">Cancel</button>
                        </td>
                    </script>
                    <button class="btn btn-info" ng-disabled="isAddFeature" ng-click="addFeature()">Add new feature <i class="fa fa-plus"></i> </button>
                    @*<input type="text" ng-disabled="!basicDetailsEditing" ng-model="product.Name" placeholder="e.g Arhar dal, chocolate etc." name="productName" class="form-control" />*@

                </div>
            </div>

            <div class="form-group">

             
                <div class="col-lg-12">
                    <h4 for="product.Images">Images</h4>
                    <table class="table table-striped table-hover">
                        <tr><th>#</th> <th>Image</th><td>Actions</td></tr>
                        <tr ng-repeat="i in product.Images" ng-include="getTemplateImages(i)"> </tr>
                    </table>
                    <script type="text/ng-template" id="displayPicture">
                        <td>{{ i.ImageID }}</td>
                        <td>
                            <img src="{{i.ImageLink}}" )" style="width:100px" />
                        </td>
                        <td>
                            <button class="btn btn-danger btn-xs" title="Remove Image" id="btnImageDelete" ng-click="deleteImage( i.ImageID )"> <i class="fa fa-remove"></i> </button>
                        </td>
                    </script>

                    <script type="text/ng-template" id="addPicture">
                        <td><span ng-model="i.ImageID">{{i.ImageID}} </span></td>
                        <td><input type="file" onchange="angular.element(this).scope().uploadedFile(this)" /> <span>{{i.ImageLink}}</span></td>
                        <td>
                            <button class="btn btn-success btn-xs" ng-click="saveNewImage(i)">Save</button>
                            <button class="btn btn-danger btn-xs" ng-click="removeImage()">Cancel</button>
                        </td>
                    </script>
                    <button class="btn btn-info" ng-disabled="isAddImage" ng-click="addImage()">Add new Image <i class="fa fa-plus"></i> </button>
                    @*<input type="text" ng-disabled="!basicDetailsEditing" ng-model="product.Name" placeholder="e.g Arhar dal, chocolate etc." name="productName" class="form-control" />*@

                </div>
            </div>



        </form>

        <hr />
        <h3>Product Pricing and Stock Availaibilty</h3>
        <hr />
        
        <form class="form-horizontal" name="formProductPriceStockDetails">
            <div class="form-group">
                <div class="col-lg-12">
                    <table class="table table-striped table-hover">
                        <tr>
                            <th>Size</th>
                            <th>Unit</th>
                            <th>Size Type</th>
                            <th>Price (INR)</th>
                            <th>Shpping Cost (INR)</th>
                            <th>Stock</th>
                            <th>Actions</th>
                        </tr>
                        <tr ng-repeat="ps in productPriceStockMappings" ng-include="getTemplateForProductStockPrice(ps)"></tr>
                    </table>
                    <script type="text/ng-template" id="displayPricing">
                        <td>{{ ps.SizeName }}</td>
                        <td>{{ ps.UnitName }}</td>
                        <td>{{ ps.SizeTypeName }}</td>
                        <td>{{ ps.Price }}</td>
                        <td>{{ ps.Cost }}</td>
                        <td>{{ ps.Stock }}</td>
                        <td>
                            <button class="btn btn-info btn-xs" id="btnEditFeature" title="Edit" ng-click="editProductStockPrice(ps)"> <i class="fa fa-pencil"></i> </button>
                                
</td>
                    </script>
                    <script type="text/ng-template" id="editPricing">
                        <td><input type="text" ng-model="ps.SizeName" /></td>
                        <td><select ng-options="u.UnitID as u.Name for u in units" ng-init="ps.UnitID" ng-model="ps.UnitID" ></select></td>
                        <td> <select ng-options="s.SizeTypeID as s.Name for s in sizetypes" ng-init="ps.SizeTypeID" ng-model="ps.SizeTypeID" ></select> </td>
                        <td><input type="text" ng-model="ps.Price" /></td>
                        <td><input type="text" ng-model="ps.Cost" /></td>
                        <td><input type="text" ng-model="ps.Stock" /></td>
                        <td>
                            <button class="btn btn-success btn-xs" ng-click="saveAddedPrice(x)">Save</button>
                            <button class="btn btn-danger btn-xs" ng-click="reset('2')">Cancel</button>
                        </td>
                    </script>
                </div>
                </div>
        </form>
        
    </div>
</div>

ProductController.cs
------------------------------

[HttpGet]
        public JsonResult GetSizeTypes()
        {
            _dbContext = new karrykartEntities();

            var sizetypes = _dbContext.SizeTypes.Select(x => new { x.SizeTypeID, x.Name }).ToList();
            _dbContext = null;

            return Json(sizetypes, JsonRequestBehavior.AllowGet);
        }
[HttpGet]
        public JsonResult GetUnits()
        {
            _dbContext = new karrykartEntities();
            var units = _dbContext.Units.Select(x => new { x.UnitID, x.Name }).ToList();
            _dbContext = null;

            return Json(units, JsonRequestBehavior.AllowGet);
        }
