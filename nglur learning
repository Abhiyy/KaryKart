24/01/2017
==========================
API- Web.config
------------------
<system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Allow-Headers" value="Content-Type" />
        <add name="Access-Control-Allow-Methods" value="GET,POST,PUT,DELETE,OPTIONS" />
        <add name="Access-Control-Allow-Credentials" value="true" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  
  API - ProductModel.cs
  ----------------------------
  using AppBanwao.KarryKart.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace API.Models
{
    public class ProductModel
    {

        public Guid ProductID { get; set; }

        public string Name { get; set; }

        public string Description { get; set; }

        public int CategoryID { get; set; }

        public string CategoryName { get; set; }

        public int BrandID { get; set; }

        public string BrandName { get; set; }

        public int SubCategoryID { get; set; }

        public string SubCategoryName { get; set; }

        public DateTime CreatedOn { get; set; }

        public DateTime UpdatedOn { get; set; }

        public string CreatedBy { get; set; }

        public string UpdatedBy { get; set; }

        public bool Active { get; set; }

        public List<ProductFeatures> Features { get; set; }

        public List<ProductImages> Images { get; set; }

        public List<ProductPrices> Prices { get; set; }

        public List<ProductShippingDetail> ShippingDetails { get; set; }

        public List<ProductSize> ProductSizeMappings { get; set; }



    }

    public class ProductFeatures
    {
        public int FeatureID { get; set; }

        public string Feature { get; set; }

    }

    public class ProductImages
    {
        public Guid ImageID { get; set; }

        public string ImageLink { get; set; }
    }

    public class ProductPrices
    {
        public int PriceID { get; set; }

        public int SizeID { get; set; }

        public decimal Price { get; set; }

        public int CurrencyID { get; set; }
    }

    public class ProductShippingDetail
    {
        public int ShippingCostID { get; set; }

        public int SizeID { get; set; }

        public decimal Cost { get; set; }
    }

    public class ProductSize 
    {
        public int ProductSizeMappingID { get; set; }

        public int SizeID { get; set; }

        public int UnitID { get; set; }
        public string UnitName { get; set; }
        public int Stock { get; set; }
        public string SizeName { get; set; }
        public string SizeTypeName { get; set; }
        public int SizeTypeID { get; set; }
    }

}

API - ProductHelper.cs
--------------------------------------

 private List<ProductSize> GetProductSizeMapping(karrykartEntities context, Product product)
        {
            List<ProductSize> lstProductSizeMapping = new List<ProductSize>(); ProductSize objSizeMapping = null;
            foreach (var productSize in product.ProductSizeMappings)
            {
                objSizeMapping = new ProductSize()
                {
                    SizeID = productSize.SizeID.Value,
                    ProductSizeMappingID = productSize.ProductSizeMappingID,
                    Stock = productSize.Stock.Value,
                    UnitID = productSize.UnitID.Value,
                    
                };
                objSizeMapping.UnitName = context.Units.Where(x => x.UnitID == productSize.UnitID).FirstOrDefault().Name;
                objSizeMapping.SizeName = context.Sizes.Where(x => x.SizeID == productSize.SizeID).FirstOrDefault().Name;
                objSizeMapping.SizeTypeID = context.Sizes.Where(x => x.SizeID == productSize.SizeID).FirstOrDefault().SizeTypeID.Value;
                objSizeMapping.SizeTypeName = context.SizeTypes.Where(x => x.SizeTypeID == objSizeMapping.SizeTypeID).FirstOrDefault().Name;
                lstProductSizeMapping.Add(objSizeMapping);
                objSizeMapping = null;
            }
            return lstProductSizeMapping;
        }
        
Web - ProductDetailsModel.cs
------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace AppBanwao.KaryKart.Web.Models
{
    public class ProductDetailsModel
    {
         public Guid ProductID { get; set; }

        public string Name { get; set; }

        public string Description { get; set; }

        public int CategoryID { get; set; }

        public string CategoryName { get; set; }

        public int BrandID { get; set; }

        public string BrandName { get; set; }

        public int SubCategoryID { get; set; }

        public string SubCategoryName { get; set; }

        public DateTime CreatedOn { get; set; }

        public DateTime UpdatedOn { get; set; }

        public string CreatedBy { get; set; }

        public string UpdatedBy { get; set; }

        public bool Active { get; set; }

        public List<ProductFeatures> Features { get; set; }

        public List<ProductImages> Images { get; set; }

        public List<ProductPrices> Prices { get; set; }

        public List<ProductShippingDetail> ShippingDetails { get; set; }

        public List<ProductSize> ProductSizeMappings { get; set; }



    }

    public class ProductFeatures
    {
        public int FeatureID { get; set; }

        public string Feature { get; set; }

    }

    public class ProductImages
    {
        public Guid ImageID { get; set; }

        public string ImageLink { get; set; }
    }

    public class ProductPrices
    {
        public int PriceID { get; set; }

        public int SizeID { get; set; }

        public decimal Price { get; set; }

        public int CurrencyID { get; set; }
    }

    public class ProductShippingDetail
    {
        public int ShippingCostID { get; set; }

        public int SizeID { get; set; }

        public decimal Cost { get; set; }
    }

    public class ProductSize 
    {
        public int ProductSizeMappingID { get; set; }

        public int SizeID { get; set; }

        public int UnitID { get; set; }
        public string UnitName { get; set; }
        public int Stock { get; set; }
        public string SizeName { get; set; }
        public string SizeTypeName { get; set; }
        public int SizeTypeID { get; set; }
    }
    }

Web- ProductCtrl.js
-------------------------------


app.controller("ProductController", ['$scope', '$http', '$window', '$location','ProductService', function ($scope, $http, $window, $location, ProductService) {
    var apiURL = 'http://localhost:53445/api/';

    //var id = ;
    $scope.basicDetailsEditing = false;
    var product = ProductService.getProduct($location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1)));//$http.get(apiURL + "product?id=" + $location.absUrl().substring(($location.absUrl().lastIndexOf("/") + 1))); //ProductService.GetProduct(id);


    $scope.editBasicDetails = function () {

    }

}]);

app.service('ProductService', ['$http', function ($http) {
    var apiURL = 'http://localhost:53445/api/';

    var product;
    this.getProduct = function (id) {
        product = $http.get(apiURL + "product?id=" + id).then(function (response) {
            product = (response.data);
        });

        return product;
    };

}]);

Web- ProductController.cs
----------------------------------

public ActionResult Edit(Guid id)
        {
            return View();
        }

Web - Product/Edit.cshtml
-------------------------------------
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
<script src="~/Scripts/App/ProductCtrl.js"></script>
<script src="http://kendo.cdn.telerik.com/2017.1.118/js/kendo.all.min.js"></script>
<div class="row">

    <div class="col-md-12">
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Home")">Home</a></li>
            <li><a href="@Url.Action("Index","Product")">Product</a></li>
            <li class="active">Edit</li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-md-10" ng-controller="ProductController">
        <h3>Product Details</h3>
        <hr />

        <form name="formBasicdetails" class="form-horizontal">
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Name">Name</label>
                <div class="col-lg-7">
                    <input type="text" ng-disabled="basicDetailsEditing" ng-model="product.Name" placeholder="e.g Arhar dal, chocolate etc." name="productName" class="form-control" />

                </div>
            </div>
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Description">Description</label>
                <div class="col-lg-7">
                    <textarea ng-disabled="basicDetailsEditing" ng-model="product.Description" placeholder="e.g Enter product details." name="productDescription" id="productDescription" class="form-control" />

                </div>
            </div>
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.CategoryID">Category</label>
                <div class="col-lg-7">
                    <select ng-disabled="basicDetailsEditing" ng-model="product.CategoryID" class="form-control" name="productCategory" id="productCategory"></select>

                </div>
            </div>
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.SubCategoryID">Sub-Category</label>
                <div class="col-lg-7">
                    <select ng-disabled="basicDetailsEditing" ng-model="product.SubCategoryID" class="form-control" name="productSubCategory" id="productSubCategory"></select>

                </div>
            </div>
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.BrandID">Brand</label>
                <div class="col-lg-7">
                    <select ng-disabled="basicDetailsEditing" ng-model="product.BrandID" class="form-control" name="productBrand" id="productBrand"></select>

                </div>
            </div>
            <div class="form-group">

                <label class="col-lg-3 control-label" for="product.Active">Active</label>
                <div class="col-lg-7">
                    <input type="checkbox" ng-disabled="basicDetailsEditing" ng-model="product.Active" class="form-control" name="productActive" id="productActive" />

                </div>
            </div>

        </form>
    </div>
</div>

Web - Product/Details.cshtml
---------------------------------

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
@model AppBanwao.KaryKart.Web.Models.ProductDetailsModel
<div class="row">

    <div class="col-md-12">
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Home")">Home</a></li>
            <li><a href="@Url.Action("Index","Product")">Product</a></li>
            <li class="active">Details</li>
        </ul>
    </div>
</div>
<div class="row">

    <div class="col-md-10">

        @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal" }))
        {

            <h3>Product Details</h3>
            <hr />
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.ProductID)
            <div class="form-group">

                <label class="col-lg-3 control-label">Name</label>
                <div class="col-lg-7">
                    @Html.DisplayFor(m => m.Name)

                </div>
            </div>
            <div class="form-group">

                <label class="col-lg-3 control-label">Description</label>
                <div class="col-lg-7">
                    @Html.DisplayFor(m => m.Description)

                </div>
            </div>
            <div class="form-group">

                <label class="col-lg-3 control-label">Category</label>
                <div class="col-lg-7">
                    @Html.DisplayFor(m => m.CategoryName)

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label">Sub Category</label>
                <div class="col-lg-7">
                    @Html.DisplayFor(m => m.SubCategoryName)

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label">Brand</label>
                <div class="col-lg-7">
                    @Html.DisplayFor(m => m.BrandName)

                </div>
            </div>

            <div class="form-group">

                <label class="col-lg-3 control-label">Active</label>
                <div class="col-lg-7">
                    @if (Model.Active)
                    {
                        <span>Yes</span>
                    }
                    else
                    {
                        {
                            <span>No</span>
                        }
                    }

                </div>
            </div>



            <h3>Product Features & Image Details</h3>
            <hr />
            <div class="form-group">

                <label class="col-lg-3 control-label">Features</label>
                <div class="col-lg-7">

                    @foreach (var feature in Model.Features)
                    {
                        <i class="fa fa-check"></i> <span>@feature.Feature</span><br />
                    }


                </div>
            </div>

            <div class="form-group">



                <label class="col-lg-3 control-label">Images</label><br />
                <div class="col-lg-7">
                    @foreach (var imgLink in Model.Images)
                    {
                        <img src="@Url.Content(imgLink.ImageLink)" class="img img-responsive" style="width:20%" />
                    }
                </div>

            </div>



            <h3>Product Stock & Price Details</h3>
            <hr />

            <div class="form-group">


                <div class="col-lg-10">
                    <table class="table table-striped table-hover ">
                        <thead>
                            <tr>

                                <th>Size Name</th>
                                <th>Unit Name</th>
                                <th>Size Type</th>
                                <th>Price (per unit)</th>
                                <th>Shipping Cost (per unit)</th>
                                <th>Stock</th>
                           </tr>
                        </thead>
                        <tbody>
                            @foreach (var row in Model.ProductSizeMappings)
                            {
                                <tr>
                                    <td>@row.SizeName </td>
                                    <td>@row.UnitName</td>
                                    <td>@row.SizeTypeName</td>
                                    <td>@Model.Prices.Where(x => x.SizeID == row.SizeID).FirstOrDefault().Price</td>
                                    <td>@Model.ShippingDetails.Where(x => x.SizeID == row.SizeID).FirstOrDefault().Cost</td>
                                    <td>@row.Stock</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                   

                </div>
            </div>


            <div class="form-group">
                <div class="col-lg-10">
                    <a href="@Url.Action("Edit", "Product", new { id = Model.ProductID })" class="btn btn-success bluebutton">Edit Product Details <i class="fa fa-edit"></i></a>
                    
                    <hr />
                    <a href="@Url.Action("Index","Category")" class="btn btn-danger">Back <i class="fa fa-backward"></i> </a>
                </div>
            </div>

        }
    </div>
</div>

